{"version":3,"sources":["components/Navbar.js","components/Text.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Home","About","onClick","toggle","Text","useState","text","setText","btntext","setbtntext","color","backgroundColor","style","setstyle","value","onChange","event","target","rows","toUpperCase","document","getElementById","innerHTML","showalert","toLowerCase","length","split","defaultProps","PropType","PropTypes","string","isRequired","hading","Alert","alert","role","msg","App","setmode","setalert","message","setTimeout","colorpicker","body","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.766dfdd0.chunk.js","sourcesContent":["import './Ap.css';\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\n\nexport default function Navbar(props) {\n    return (\n        <div>\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n  <Link className=\"navbar-brand\" to=\"/\">UniSeller</Link>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item active\">\n        <Link className=\"nav-link\" to=\"/\">{props.Home}</Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/about\">{props.About}</Link>\n      </li>\n      </ul>\n\n      <button type=\"button\" onClick={props.toggle} className={`btn btn-dark`}>Dark</button>\n      <input type=\"color\"  id=\"color\"></input>\n      \n  \n  \n  </div>\n</nav>\n        </div>\n    )\n\n\n}\nNavbar.defaultProps = {\nHome :\"Home\",\nAbout : \"about\"\n};\nNavbar.PropType = {\n    Home:PropTypes.string.isRequired,\n    About:PropTypes.string.isRequired\n};","import React,{useState} from 'react'\n\nexport default function Text(props) {\nconst [text, setText] = useState(\"enter your text\");\n    const onchange =(event) =>{\n         setText(event.target.value);\n    }\n    const handelclick=() => {\n        let n = text;\n        setText(n.toUpperCase());\n        document.getElementById('p').innerHTML =  text;\n        props.showalert(\"Text converted into UpperCase\",\"success\");\n\n\n    }\n    const lower=() => {\n        let n = text;\n        setText(n.toLowerCase());\n        document.getElementById('p').innerHTML =  text;\n        props.showalert(\"Text converted into Lowercase\",\"success\");\n\n    }\n    const [btntext, setbtntext] = useState(\"Dark Mode\")\n\n\n    const [style, setstyle] = useState(\n        {\n            color:'black',\n            backgroundColor:'white'\n        }\n     )\n    \n  const changemode = () => {\n           if(style.color === 'black'){\n               setstyle(\n                   {\n                       color:'white',\n                       backgroundColor:'grey'\n                   }\n               );\n               setbtntext(\"Light Mode\");\n \n               \n           }\n           else{\n               setstyle(\n                   {\n                       color:\"black\",\n                       backgroundColor:\"white\"\n                   }\n                  \n               );\n\n               setbtntext(\"Dark Mode\");\n           }\n \n     }\n\n    return (\n        <div className=\"container my-3\" style={{color: props.mode === 'dark'?'white':'black'}}>\n            <div className=\"mb-3\">\n                <h3 className=\"success\" style={{color: props.mode === 'dark'?'white':'black'}}>ENTER TEXT BELOW </h3>\n               <textarea className=\"form-control\" style={style} value={text} onChange={onchange} id=\"textconverter\" rows=\"8\"></textarea>\n            </div>\n          \n          <button className=\"btn btn-success ml-1\" onClick={handelclick}>UPPERCASE</button>\n        \n          <button className=\"btn btn-secondary ml-3\" onClick={lower}>LOWERCASE</button>\n        \n           <button type=\"button\" style={style} className=\"btn btn-dark ml-3\" onClick={changemode}>{btntext}</button>\n\n        \n        \n              <h2 className=\" my-3\" style={{color:\"green\"}}>-- TEXT SUMMARY --</h2>\n              <p>{text.length} character & {text.split(\" \").length} word are there </p>\n              <p> {0.008*text.split(\" \").length} minutes is required </p>\n             <h2 className=\"my-3 \" style={{color:\"green\"}}>PREVIEW</h2>\n             <p id=\"p\"></p>\n            \n          \n        </div>\n       \n\n    )\n    \n}\nText.defaultProps = {\n    hading :\"enter text in textarea\"\n};\n","import React from 'react'\n\nfunction Alert(props) {\n    return (\n        props.alert && <div>\n                            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n                                <strong>{props.alert.type}:</strong>{props.alert.msg}\n                \n                            </div>\n                            \n                        </div>\n    )\n}\n\nexport default Alert\n","import React from 'react'\n\nexport default function About() {\n    return (\n        <div>\n            <ul className=\"list-group\">\n              <li className=\"list-group-item\">An item</li>\n              <li className=\"list-group-item\">A second item</li>\n              <li className=\"list-group-item\">A third item</li>\n              <li className=\"list-group-item\">A fourth item</li>\n              <li className=\"list-group-item\">And a fifth one</li>\n            </ul>\n            \n        </div>\n    )\n}\n\n\n","\nimport './App.css';\n\nimport Navbar from './components/Navbar';\nimport Text from './components/Text';\nimport React,{useState} from 'react';\nimport Alert from './components/Alert';\nimport About from './components/About';\n import {\n   BrowserRouter as Router,\n   Routes,\n   Route\n} from \"react-router-dom\";\nfunction App() {\n   const [mode, setmode] = useState(\"light\") \n    const [alert, setalert] = useState(null) \n    const showalert = (message , type) => {\n           setalert(\n             {\n               msg:message,\n               type:type\n             })\n            setTimeout(\n              () => {\n                setalert(null);\n\n              },1500\n            )\n           \n\n    }\n   const toggle = () =>{\n    let colorpicker = document.getElementById(\"color\").value;\n    \n     if(mode === colorpicker){\n       setmode(colorpicker)\n      document.body.style.backgroundColor = \"white\";\n      showalert(\"Light  mode is enabled \",\"success\");\n      \n      }\n       else {\n         setmode(colorpicker)\n       \n         document.body.style.backgroundColor = colorpicker;\n         showalert(\"Dark  mode is enabled \",\"success\");\n        \n       }\n       document.getElementById(\"color\").style.backgroundColor = document.getElementById(\"color\").value;\n         \n   }\n   \n  return (\n  <>\n   <Router>\n    <Navbar  About=\"ABOUT\" mode={mode} toggle={toggle}/>\n    <Alert alert={alert}/>\n    {/* <Text showalert={showalert} hading=\"ENTER TEXT TO CONVERT IN UPPERCASE\"/> */}\n    <Routes>\n          \n         \n    <Route path=\"/\" element={<Text showalert={showalert} hading=\"ENTER TEXT TO CONVERT IN UPPERCASE\"/>} />\n    <Route path=\"/about\" element={<About/>} />\n    </Routes>\n    </Router>\n  \n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}